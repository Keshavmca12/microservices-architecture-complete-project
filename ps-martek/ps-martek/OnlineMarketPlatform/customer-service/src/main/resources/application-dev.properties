
server.port=6061

spring.application.name=customer-service

#spring.zipkin.enabled=true

#spring.sleuth.enabled=true
#spring.sleuth.traceId128=true
#spring.sleuth.sampler.probability=0.01
#spring.sleuth.async.enabled=true
#spring.sleuth.propagation-keys=Authorization
#spring.sleuth.log.slf4j.whitelisted-mdc-keys=Authorization

management.endpoints.web.exposure.include=*

jwt.password.encoder.secret= oZr417KU7ipPoCCGY0-cPcGu0PpT1_aG9o-BD1KcnN3BpZPrLcNKgcF9QXXJwrY50Whd7Ij51t45oD0ctn-Vo032uFoMtnNzvzpOFq
jwt.password.encoder.iteration=33
jwt.password.encoder.keylength=256
jwt.secret=AMDXGbO7gGwf3hoFPpm6GwQvFrqoCsn2 #This Secret For JWT HS256 Signature Algorithm MUST Have 256 bits KeySize
jwt.expiration=28800 

app.info=Customer Microservice Dev
app.version=V1
app.public_routes=/user/customer-service/**,/customer/customer-service/**,/customerpay/api/**,/customeraddress/api/**,/actuator/**,/user-svc/welcome,/user-svc/api/v1/login,/user-svc/api/v1/register,/swagger-ui.html,/webjars/**,/v3/**,/favicon.ico

app.db.host=localhost
app.db.port=27017
app.data.database=userdb
#app.data.database=mongodb://tga-customerdetails-mongo:wAFeXU06EOMWGVubrAscgAYIllKiAkq2SRykVmekJWTweD4kmtthxjTqMuXOJfkT0YUdwuEQCp3NACDb2D461A==@tga-customerdetails-mongo.mongo.cosmos.azure.com:10255/?ssl=true&retrywrites=false&replicaSet=globaldb&maxIdleTimeMS=120000&appName=@tga-customerdetails-mongo@

#spring.data.mongodb.uri=mongodb://tga-customerdetails-mongo:wAFeXU06EOMWGVubrAscgAYIllKiAkq2SRykVmekJWTweD4kmtthxjTqMuXOJfkT0YUdwuEQCp3NACDb2D461A==@tga-customerdetails-mongo.mongo.cosmos.azure.com:10255/?ssl=true&retrywrites=false&replicaSet=globaldb&maxIdleTimeMS=120000&appName=@tga-customerdetails-mongo@
spring.data.mongodb.uri=mongodb://localhost:27017
spring.data.mongodb.database=customer_db
spring.zipkin.base-url=http://localhost:9411
app.kafka.bootstrap-servers: http://localhost:9092




kafka.consumer.customer-event-request-topic=update-customer-request
#kafka.producer.order-event-response-topic=update-customer-response
spring.kafka.bootstrap-servers=http://localhost:9092
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.group-id=customer-group-id
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=com.tga.pos.customerservice.server.CustomDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*
#spring.kafka.producer.properties.spring.json.type.mapping=event:com.tga.customer.event.CustomerAddedEvent


spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=com.tga.pos.customerservice.server.CustomSerializer
spring.kafka.producer.properties.spring.json.add.type.headers=false

